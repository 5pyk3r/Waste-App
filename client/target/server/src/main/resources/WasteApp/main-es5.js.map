{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/admin/admin.component.ts","webpack:///src/app/admin/admin.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/error/error.component.ts","webpack:///src/app/error/error.component.html","webpack:///src/app/footer/footer.component.ts","webpack:///src/app/footer/footer.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/info/bio/bio.component.ts","webpack:///src/app/info/bio/bio.component.html","webpack:///src/app/info/glass/glass.component.ts","webpack:///src/app/info/glass/glass.component.html","webpack:///src/app/info/metals/metals.component.ts","webpack:///src/app/info/metals/metals.component.html","webpack:///src/app/info/mixed/mixed.component.ts","webpack:///src/app/info/mixed/mixed.component.html","webpack:///src/app/info/paper/paper.component.ts","webpack:///src/app/info/paper/paper.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/logout/logout.component.ts","webpack:///src/app/logout/logout.component.html","webpack:///src/app/menu/menu.component.ts","webpack:///src/app/menu/menu.component.html","webpack:///src/app/routing.module.ts","webpack:///src/app/service/basic-authentication.service.ts","webpack:///src/app/service/data/data.service.ts","webpack:///src/app/service/hardcoded-authentication.service.ts","webpack:///src/app/service/http/http-intercepter-basic-auth.service.ts","webpack:///src/app/service/route-guard.service.ts","webpack:///src/app/waste/create-waste/create-waste.component.ts","webpack:///src/app/waste/create-waste/create-waste.component.html","webpack:///src/app/waste/search-waste/search-waste.component.ts","webpack:///src/app/waste/search-waste/search-waste.component.html","webpack:///src/app/waste/waste.component.ts","webpack:///src/app/waste/waste.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AdminComponent","wasteService","router","showWaste","retrieveAllWaste","subscribe","response","console","log","waste","deleteWaste","navigate","createWaste","selector","templateUrl","styleUrls","AppComponent","title","AppModule","provide","useClass","multi","forRoot","declarations","imports","providers","bootstrap","ErrorComponent","FooterComponent","HomeComponent","dataService","error","findByNameExists","name","data","exists","searchWaste","BioComponent","GlassComponent","MetalsComponent","MixedComponent","PaperComponent","LoginComponent","hardcodedAuthService","basicAuthenticationService","username","password","showLoginError","loginErrorMessage","showAlreadyLoggedError","alreadyLoggedErrorMessage","authenticate","isUserLoggedIn","setTimeout","executeAuthenticationService","basicAuthLogin","LogoutComponent","logoutMessage","logout","MenuComponent","routes","path","component","canActivate","RoutingModule","BasicAuthenticationService","http","basicAuthHeaderString","window","btoa","headers","Authorization","get","pipe","sessionStorage","setItem","getItem","getAuthenticatedUser","user","removeItem","providedIn","AuthenticationBean","message","DataService","post","put","HardcodedAuthenticationService","HttpIntercepterBasicAuthService","request","next","getAuthenticatedToken","clone","setHeaders","handle","RouteGuardService","route","state","wasteType","CreateWasteComponent","wasteError","getAllWasteTypes","isAlreadyExist","retrieveAllWasteTypes","wasteTypes","saveWaste","SearchWasteComponent","passedName","snapshot","params","findWaste","findByName","value","Waste","WasteType","WasteComponent","activatedRoute","getWasteById","retrieveWasteById","updateWaste","environment","production","bootstrapModule","err"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACmBI;;AAEE;;AAAI;;AAAkB;;AACtB;;AAAI;;AAA4B;;AAChC;;AAAI;;AAAQ;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA4D;;AAAM;;AAAS;;AACvF;;AAAI;;AAAQ;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA2D;;AAAM;;AAAS;;AACxF;;;;;;AAJM;;AAAA;;AACA;;AAAA;;;;QDXGC,c;;;AAIX,8BAAoBC,YAApB,EAAuDC,MAAvD,EAAuE;AAAA;;AAAnD,aAAAD,YAAA,GAAAA,YAAA;AAAmC,aAAAC,MAAA,GAAAA,MAAA;AAAmB;;;;mCAElE;AACN,eAAKC,SAAL;AACD;;;oCACW;AAAA;;AACV,eAAKF,YAAL,CAAkBG,gBAAlB,GAAqCC,SAArC,CACE,UAAAC,QAAQ,EAAI;AACVC,mBAAO,CAACC,GAAR,CAAY,kDAAZ;AACAD,mBAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,iBAAI,CAACG,KAAL,GAAaH,QAAb;AACD,WALH;AAMD;;;oCAGWP,E,EAAI;AAAA;;AACd,eAAKE,YAAL,CAAkBS,WAAlB,CAA8BX,EAA9B,EAAkCM,SAAlC,CACE,UAAAC,QAAQ,EAAI;AACVC,mBAAO,CAACC,GAAR,CAAYF,QAAZ;AACAC,mBAAO,CAACC,GAAR,wBAA4BT,EAA5B;;AACA,kBAAI,CAACI,SAAL;AACD,WALH;AAMD;;;oCAEWJ,E,EAAI;AACd,eAAKG,MAAL,CAAYS,QAAZ,CAAqB,CAAC,OAAD,EAAUZ,EAAV,CAArB;AACD;;;sCACa;AACZ,eAAKG,MAAL,CAAYS,QAAZ,CAAqB,CAAC,OAAD,CAArB;AACD;;;;;;;uBAjCUX,c,EAAc,uI,EAAA,uH;AAAA,K;;;YAAdA,c;AAAc,gC;AAAA,e;AAAA,a;AAAA,iP;AAAA;AAAA;ACV3B;;AACE;;AAAI;;AAAa;;AAAK;;AAGtB;;AAA8C;AAAA,mBAAS,IAAAY,WAAA,EAAT;AAAsB,WAAtB;;AAAwB;;AAAW;;AAEjF;;AAAI;;AACJ;;AACE;;AACA;;AAEE;;AAAgB;;AAAK;;AACrB;;AAAgB;;AAAU;;AAC1B;;AAAgB;;AAAM;;AACtB;;AAAgB;;AAAM;;AACxB;;AACA;;AACA;;AACA;;AAOA;;AACF;;AAEF;;;;AAVQ;;AAAA;;;;;;;;;sEDRKZ,c,EAAc;cAL1B,uDAK0B;eALhB;AACTa,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,uBAAD;AAHF,S;AAKgB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEX3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaC,Y,GALb;AAAA;;AAME,WAAAC,KAAA,GAAQ,UAAR;AACD,K;;;uBAFYD,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA;AAAA;ACLzB;;AAEA;;AAEA;;;;;;;;;sEDCaA,Y,EAAY;cALxB,uDAKwB;eALd;AACTH,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;AEPzaG,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBANT,CACT;AAACC,eAAO,EAAE,uEAAV;AAA6BC,gBAAQ,EAAE,kHAAvC;AAAwEC,aAAK,EAAE;AAA/E,OADS,EAET;AAACF,eAAO,EAAE,gEAAV;AAA4BC,gBAAQ,EAAE;AAAtC,OAFS,C;AAGV,gBAXQ,CACP,uEADO,EAEP,6DAFO,EAGP,2DAHO,EAIP,sEAJO,EAKP,6FALO,EAMP,uEANO,EAMQ,2DANR,EAMqB,gEAAiBE,OAAjB,EANrB,EAOP,yEAPO,EAOU,2EAPV,CAWR;;;;0HAGUJ,S,EAAS;AAAA,uBA/BlB,2DA+BkB,EA9BlB,kEA8BkB,EA7BlB,qEA6BkB,EA5BlB,kEA4BkB,EA3BlB,qEA2BkB,EA1BlB,qEA0BkB,EAzBlB,yEAyBkB,EAxBlB,yEAwBkB,EAvBlB,sEAuBkB,EAtBlB,gGAsBkB,EArBlB,gGAqBkB,EApBlB,8EAoBkB,EAnBlB,2EAmBkB,EAlBlB,2EAkBkB,EAjBlB,qEAiBkB,EAhBlB,2EAgBkB;AAhBJ,kBAGd,uEAHc,EAId,6DAJc,EAKd,2DALc,EAMd,sEANc,EAOd,6FAPc,EAQd,uEARc,EAQC,2DARD,EAQc,+DARd,EASd,yEATc,EASG,2EATH;AAgBI,O;AAPe,K;;;;;sEAOxBA,S,EAAS;cAjCrB,sDAiCqB;eAjCZ;AACRK,sBAAY,EAAE,CACZ,2DADY,EAEZ,kEAFY,EAGZ,qEAHY,EAIZ,kEAJY,EAKZ,qEALY,EAMZ,qEANY,EAOZ,yEAPY,EAQZ,yEARY,EASZ,sEATY,EAUZ,gGAVY,EAWZ,gGAXY,EAYZ,8EAZY,EAaZ,2EAbY,EAcZ,2EAdY,EAeZ,qEAfY,EAgBZ,2EAhBY,CADN;AAmBRC,iBAAO,EAAE,CACP,uEADO,EAEP,6DAFO,EAGP,2DAHO,EAIP,sEAJO,EAKP,6FALO,EAMP,uEANO,EAMQ,2DANR,EAMqB,gEAAiBF,OAAjB,EANrB,EAOP,yEAPO,EAOU,2EAPV,CAnBD;AA2BRG,mBAAS,EAAE,CACT;AAACN,mBAAO,EAAE,uEAAV;AAA6BC,oBAAQ,EAAE,kHAAvC;AAAwEC,iBAAK,EAAE;AAA/E,WADS,EAET;AAACF,mBAAO,EAAE,gEAAV;AAA4BC,oBAAQ,EAAE;AAAtC,WAFS,CA3BH;AA+BRM,mBAAS,EAAE,CAAC,2DAAD;AA/BH,S;AAiCY,Q;;;;;;;;;;;;;;;;;;AC9DtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaC,c;;;AAEX,gCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,c;AAAc,K;;;YAAdA,c;AAAc,gC;AAAA,c;AAAA,a;AAAA,4D;AAAA;AAAA;ACL3B;;AACA;;AAAuB;;AAAyB;;AAChD;;AAAmD;;AAAI;;;;;;;;;sEDG1CA,c,EAAc;cAL1B,uDAK0B;eALhB;AACTd,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,uBAAD;AAHF,S;AAKgB,Q;;;;;;;;;;;;;;;;;;;;AEP3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaa,e;;;AAEX,iCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,e;AAAe,K;;;YAAfA,e;AAAe,iC;AAAA,c;AAAA,a;AAAA,6B;AAAA;AAAA;ACP5B;;AACA;;AACA;;;;;;;;sEDKaA,e,EAAe;cAL3B,uDAK2B;eALjB;AACTf,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;AEP5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACGI;;AAA+E;;AAA6B;;;;QDOnGc,a;;;AAOX,6BAAoB3B,MAApB,EAA4C4B,WAA5C,EAAsE;AAAA;;AAAlD,aAAA5B,MAAA,GAAAA,MAAA;AAAwB,aAAA4B,WAAA,GAAAA,WAAA;AAF5C,aAAAC,KAAA,GAAQ,KAAR;AAEyE;;;;mCAE9D,CACV;;;sCAEa;AAAA;;AACZ,eAAKD,WAAL,CAAiBE,gBAAjB,CAAkC,KAAKC,IAAvC,EACG5B,SADH,CACa,UAAA6B,IAAI,EAAI;AACjB,kBAAI,CAACC,MAAL,GAAcD,IAAd;AACA3B,mBAAO,CAACC,GAAR,CAAY,4BAA4B,MAAI,CAAC2B,MAA7C;;AAEA,gBAAI,MAAI,CAACA,MAAL,KAAgB,IAApB,EAA0B;AACxB,oBAAI,CAACjC,MAAL,CAAYS,QAAZ,CAAqB,CAAC,QAAD,EAAW,MAAI,CAACsB,IAAhB,CAArB;AACD,aAFD,MAEO;AACL,oBAAI,CAACF,KAAL,GAAa,IAAb;AACD;AACF,WAVH;AAWD;;;;;;;uBAxBUF,a,EAAa,uH,EAAA,uI;AAAA,K;;;YAAbA,a;AAAa,+B;AAAA,e;AAAA,a;AAAA,glC;AAAA;AAAA;ACT1B;;AACE;;AACE;;AACF;;AACA;;AAAM;AAAA,mBAAY,IAAAO,WAAA,EAAZ;AAAyB,WAAzB;;AACN;;AACE;;AAA2B;;AAAQ;;AACnC;;AACE;;AAAwC;AAAA;AAAA;;AAAxC;;AACA;;AACE;;AAA8C;;AAA4B;;AAC5E;;AACF;;AACF;;AACA;;AACA;;AAEE;;AACI;;AACF;;AAAI;;AAAQ;;AACZ;;AAAI;;AAAQ;;AACZ;;AAAI;;AAAQ;;AACd;;AAEA;;AACE;;AAAI;;AACJ;;AAA+B;;AAAK;;AACtC;;AAEA;;AACE;;AAAI;;AACJ;;AAA+B;;AAAM;;AACvC;;AAEA;;AACE;;AAAI;;AACJ;;AAA+B;;AAAG;;AACpC;;AAEA;;AACE;;AAAI;;AACJ;;AAA+B;;AAAU;;AAC3C;;AACF;;AACF;;;;AA1CkD;;AAAA;;AAMJ;;AAAA;;;;;;;;;sEDCjCP,a,EAAa;cALzB,uDAKyB;eALf;AACThB,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,uBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKe,Q;;;;;;;;;;;;;;;;;;;;;;;;AEV1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOasB,Y;;;AAEX,8BAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,Y;AAAY,K;;;YAAZA,Y;AAAY,8B;AAAA,c;AAAA,a;AAAA,uK;AAAA;AAAA;ACPzB;;;;;;;;sEDOaA,Y,EAAY;cALxB,uDAKwB;eALd;AACTxB,kBAAQ,EAAE,SADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;;;AEPzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOauB,c;;;AAEX,gCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,c;AAAc,K;;;YAAdA,c;AAAc,gC;AAAA,c;AAAA,a;AAAA,uK;AAAA;AAAA;ACP3B;;;;;;;;sEDOaA,c,EAAc;cAL1B,uDAK0B;eALhB;AACTzB,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,uBAAD;AAHF,S;AAKgB,Q;;;;;;;;;;;;;;;;;;;;AEP3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOawB,e;;;AAEX,iCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,e;AAAe,K;;;YAAfA,e;AAAe,iC;AAAA,c;AAAA,a;AAAA,uK;AAAA;AAAA;ACP5B;;;;;;;;sEDOaA,e,EAAe;cAL3B,uDAK2B;eALjB;AACT1B,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;AEP5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOayB,c;;;AAEX,gCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,c;AAAc,K;;;YAAdA,c;AAAc,gC;AAAA,c;AAAA,a;AAAA,uK;AAAA;AAAA;ACP3B;;;;;;;;sEDOaA,c,EAAc;cAL1B,uDAK0B;eALhB;AACT3B,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,uBAAD;AAHF,S;AAKgB,Q;;;;;;;;;;;;;;;;;;;;AEP3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOa0B,c;;;AAEX,gCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,c;AAAc,K;;;YAAdA,c;AAAc,gC;AAAA,c;AAAA,a;AAAA,uK;AAAA;AAAA;ACP3B;;;;;;;;sEDOaA,c,EAAc;cAL1B,uDAK0B;eALhB;AACT5B,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,uBAAD;AAHF,S;AAKgB,Q;;;;;;;;;;;;;;;;;;;;AEP3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACEE;;AAAwF;;AAAqB;;;;;;AAArB;;AAAA;;;;;;AACxF;;AAAgG;;AAA6B;;;;;;AAA7B;;AAAA;;;;QDSrF2B,c;;;AAYX,8BAAoBxC,MAApB,EACoByC,oBADpB,EAEoBC,0BAFpB,EAE4E;AAAA;;AAFxD,aAAA1C,MAAA,GAAAA,MAAA;AACA,aAAAyC,oBAAA,GAAAA,oBAAA;AACA,aAAAC,0BAAA,GAAAA,0BAAA,CAAwD,CAZ5E;;AACA,aAAAC,QAAA,GAAW,EAAX;AACA,aAAAC,QAAA,GAAW,EAAX;AAEA,aAAAC,cAAA,GAAiB,KAAjB;AACA,aAAAC,iBAAA,GAAoB,sDAApB;AAEA,aAAAC,sBAAA,GAAyB,KAAzB;AACA,aAAAC,yBAAA,GAA4B,+BAA5B;AAKC;;;;mCAEU,CAEV;;;gCAGO;AACN,cAAI,KAAKP,oBAAL,CAA0BQ,YAA1B,CAAuC,KAAKN,QAA5C,EAAsD,KAAKC,QAA3D,CAAJ,EAA0E;AACxE,iBAAK5C,MAAL,CAAYS,QAAZ,CAAqB,CAAC,OAAD,CAArB;AACA,iBAAKoC,cAAL,GAAsB,KAAtB;AACD,WAHD,MAGO;AACL,iBAAKA,cAAL,GAAsB,IAAtB;AACD;AACF;;;yCAEgB;AAAA;;AACf,cAAI,KAAKH,0BAAL,CAAgCQ,cAAhC,EAAJ,EAAsD;AAClD,iBAAKH,sBAAL,GAA8B,IAA9B;AACAI,sBAAU,CAAC,YAAM;AAAE,oBAAI,CAACnD,MAAL,CAAYS,QAAZ,CAAqB,CAAC,OAAD,CAArB;AAAiC,aAA1C,EAA4C,IAA5C,CAAV;AACH,WAHD,MAGO;AACL,iBAAKiC,0BAAL,CAAgCU,4BAAhC,CAA6D,KAAKT,QAAlE,EAA4E,KAAKC,QAAjF,EACGzC,SADH,CAEI,UAAA6B,IAAI,EAAI;AACN3B,qBAAO,CAACC,GAAR,CAAY0B,IAAZ;;AACA,oBAAI,CAAChC,MAAL,CAAYS,QAAZ,CAAqB,CAAC,OAAD,CAArB;;AACA,oBAAI,CAACoC,cAAL,GAAsB,KAAtB;AACD,aANL,EAOI,UAAAhB,KAAK,EAAI;AACPxB,qBAAO,CAACC,GAAR,CAAYuB,KAAZ;AACA,oBAAI,CAACgB,cAAL,GAAsB,IAAtB;AACD,aAVL;AAWD;AACF;;;;;;;uBAhDUL,c,EAAc,uH,EAAA,yK,EAAA,iK;AAAA,K;;;YAAdA,c;AAAc,gC;AAAA,e;AAAA,a;AAAA,ge;AAAA;AAAA;ACX3B;;AACE;;AACA;;AAEF;;AAEA;;AACE;;AACE;;AACE;;AAAO;;AAAK;;AACZ;;AAAyD;AAAA;AAAA;;AAAzD;;AACF;;AACA;;AACE;;AAAO;;AAAQ;;AACf;;AAA4D;AAAA;AAAA;;AAA5D;;AACF;;AACA;;AAA8C;AAAA,mBAAQ,IAAAa,cAAA,EAAR;AAAwB,WAAxB;;AAAyB;;AAAO;;AAChF;;AAEF;;;;AAlBgD;;AAAA;;AACA;;AAAA;;AAQe;;AAAA;;AAIG;;AAAA;;;;;;;;;sEDHrDb,c,EAAc;cAL1B,uDAK0B;eALhB;AACT7B,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,uBAAD;AAHF,S;AAKgB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEZ3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASayC,e;;;AAIX,+BAAoBtD,MAApB,EAA4CyC,oBAA5C,EAAkG;AAAA;;AAA9E,aAAAzC,MAAA,GAAAA,MAAA;AAAwB,aAAAyC,oBAAA,GAAAA,oBAAA;AAF5C,aAAAc,aAAA,GAAgB,0FAAhB;AAEqG;;;;mCAE7F;AAAA;;AACN;AACA,eAAKd,oBAAL,CAA0Be,MAA1B,GAFM,CAGN;;AACAL,oBAAU,CAAC,YAAK;AACZ,kBAAI,CAACnD,MAAL,CAAYS,QAAZ,CAAqB,CAAC,GAAD,CAArB;AAA6B,WADvB,EACyB,IADzB,CAAV;AAGD;;;;;;;uBAbU6C,e,EAAe,uH,EAAA,yK;AAAA,K;;;YAAfA,e;AAAe,iC;AAAA,c;AAAA,a;AAAA,gH;AAAA;AAAA;ACR5B;;AACE;;AAAiE;;AAAiB;;AACpF;;;;AADmE;;AAAA;;;;;;;;sEDOtDA,e,EAAe;cAL3B,uDAK2B;eALjB;AACT3C,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;;;;;AET5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACIU;;AAAqE;;AAAwB;;AAAK;;AAAK;;;;;;AAGvG;;AAAsE;;AAAuB;;AAAO;;AAAK;;;;;;AACzG;;AAAsE;;AAAuB;;AAAO;;AAAK;;;;QDAtG4C,a;;;AAGX,6BAAmBhB,oBAAnB,EAAyE;AAAA;;AAAtD,aAAAA,oBAAA,GAAAA,oBAAA;AAAyD;;;;mCAEpE,CAEP;;;;;;;uBAPUgB,a,EAAa,yK;AAAA,K;;;YAAbA,a;AAAa,+B;AAAA,e;AAAA,a;AAAA,0S;AAAA;AAAA;ACP1B;;AACE;;AACE;;AAAsB;;AAAkB;;AAAuB;;AAAS;;AAAK;;AAAI;;AACjF;;AAAM;;AAA2G;;AAEjH;;AACA;;AAAM;;AAA6G;;AACnH;;AAAM;;AAA6G;;AACrH;;AACF;;;;AANa;;AAAA;;AAGA;;AAAA;;AACA;;AAAA;;;;;;;;;sEDAAA,a,EAAa;cALzB,uDAKyB;eALf;AACT9C,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,uBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKe,Q;;;;;;;;;;;;;;;;;;;;;;AER1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAkBA,QAAM6C,MAAM,GAAW,CACrB;AAAEC,UAAI,EAAE,EAAR;AAAYC,eAAS,EAAE;AAAvB,KADqB,EAErB;AAAED,UAAI,EAAE,MAAR;AAAgBC,eAAS,EAAE;AAA3B,KAFqB,EAGrB;AAAED,UAAI,EAAE,OAAR;AAAiBC,eAAS,EAAE;AAA5B,KAHqB,EAIrB;AAAED,UAAI,EAAE,OAAR;AAAiBC,eAAS,EAAE,qEAA5B;AAA4CC,iBAAW,EAAE,CAAC,8EAAD;AAAzD,KAJqB,EAKrB;AAAEF,UAAI,EAAE,QAAR;AAAkBC,eAAS,EAAE,wEAA7B;AAA8CC,iBAAW,EAAE,CAAC,8EAAD;AAA3D,KALqB,EAMrB;AAACF,UAAI,EAAE,OAAP;AAAgBC,eAAS,EAAE,+FAA3B;AAAiDC,iBAAW,EAAE,CAAC,8EAAD;AAA9D,KANqB,EAOrB;AAACF,UAAI,EAAE,WAAP;AAAoBC,eAAS,EAAE,qEAA/B;AAA+CC,iBAAW,EAAE,CAAC,8EAAD;AAA5D,KAPqB,EAQrB;AAACF,UAAI,EAAE,cAAP;AAAuBC,eAAS,EAAE;AAAlC,KARqB,EASrB;AAACD,UAAI,EAAE,QAAP;AAAiBC,eAAS,EAAE;AAA5B,KATqB,EAUrB;AAACD,UAAI,EAAE,OAAP;AAAgBC,eAAS,EAAE;AAA3B,KAVqB,EAWrB;AAACD,UAAI,EAAE,KAAP;AAAcC,eAAS,EAAE;AAAzB,KAXqB,EAYrB;AAACD,UAAI,EAAE,OAAP;AAAgBC,eAAS,EAAE;AAA3B,KAZqB,EAarB;AAACD,UAAI,EAAE,OAAP;AAAgBC,eAAS,EAAE;AAA3B,KAbqB,EAcrB;AAAED,UAAI,EAAE,OAAR;AAAiBC,eAAS,EAAE;AAA5B,KAdqB,EAerB;AAAED,UAAI,EAAE,IAAR;AAAcC,eAAS,EAAE;AAAzB,KAfqB,CAAvB;;QAuBaE,a;;;;;YAAAA;;;;yBAAAA,a;AAAa,O;AAAA,gBAHf,CAAE,6DAAa1C,OAAb,CAAqBsC,MAArB,CAAF,CAGe,EAFd,4DAEc;;;;0HAAbI,a,EAAa;AAAA;AAAA,kBAFd,4DAEc;AAAA,O;AAFF,K;;;;;sEAEXA,a,EAAa;cAJzB,sDAIyB;eAJhB;AACRxC,iBAAO,EAAE,CAAE,6DAAaF,OAAb,CAAqBsC,MAArB,CAAF,CADD;AAER9D,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAIgB,Q;;;;;;;;;;;;;;;;;;ACzC1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOamE,0B;;;AAEX,0CAAoBC,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAAqB,O,CAEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;qDAE6BrB,Q,EAAUC,Q,EAAU;AAE/C,cAAIqB,qBAAqB,GAAG,WAAWC,MAAM,CAACC,IAAP,CAAYxB,QAAQ,GAAG,GAAX,GAAiBC,QAA7B,CAAvC;AAEA,cAAIwB,OAAO,GAAG,IAAI,gEAAJ,CAAgB;AAC1BC,yBAAa,EAAEJ;AADW,WAAhB,CAAd;AAIA,iBAAO,KAAKD,IAAL,CAAUM,GAAV,eAEL;AAACF,mBAAO,EAAPA;AAAD,WAFK,EAEMG,IAFN,CAGH,2DACE,UAAAvC,IAAI,EAAI;AACNwC,0BAAc,CAACC,OAAf,CAAuB,UAAvB,EAAmC9B,QAAnC;AACA6B,0BAAc,CAACC,OAAf,CAAuB,OAAvB,EAAgCR,qBAAhC;AACA,mBAAOjC,IAAP;AACD,WALH,CAHG,CAAP;AAYD;;;+CAEsB;AACrB,iBAAOwC,cAAc,CAACE,OAAf,CAAuB,UAAvB,CAAP;AACD;;;gDAEuB;AACtB,cAAG,KAAKC,oBAAL,EAAH,EACE,OAAOH,cAAc,CAACE,OAAf,CAAuB,OAAvB,CAAP;AACH;;;yCAEgB;AACf,cAAIE,IAAI,GAAGJ,cAAc,CAACE,OAAf,CAAuB,UAAvB,CAAX;AACA,iBAAO,EAAEE,IAAI,KAAK,IAAX,CAAP;AACD;;;iCAEQ;AACPJ,wBAAc,CAACK,UAAf,CAA0B,UAA1B;AACAL,wBAAc,CAACK,UAAf,CAA0B,OAA1B;AACD;;;;;;;uBA7DUd,0B,EAA0B,uH;AAAA,K;;;aAA1BA,0B;AAA0B,eAA1BA,0BAA0B,K;AAAA,kBAFzB;;;;;sEAEDA,0B,EAA0B;cAHtC,wDAGsC;eAH3B;AACVe,oBAAU,EAAE;AADF,S;AAG2B,Q;;;;;;;QAgE1BC,kB,GACX,4BAAmBC,OAAnB,EAAoC;AAAA;;AAAjB,WAAAA,OAAA,GAAAA,OAAA;AAClB,K;;;;;;;;;;;;;;;;;ACzEH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQaC,W;;;AAEX,2BAAoBjB,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAAqB;;;;oCAE3BzD,K,EAAO;AACnB,iBAAO,KAAKyD,IAAL,CAAUkB,IAAV,iBAEH3E,KAFG,CAAP;AAGC;;;oCACWV,E,EAAIU,K,EAAO;AACrB,iBAAO,KAAKyD,IAAL,CAAUmB,GAAV,wBACWtF,EADX,GAEHU,KAFG,CAAP;AAGD;;;2CACkB;AACjB,iBAAO,KAAKyD,IAAL,CAAUM,GAAV,gBAAP;AACD;;;0CACiBzE,E,EAAI;AACpB,iBAAO,KAAKmE,IAAL,CAAUM,GAAV,4BAAyCzE,EAAzC,EAAP;AACD;;;oCACWA,E,EAAI;AACd,iBAAO,KAAKmE,IAAL,kCAAiCnE,EAAjC,EAAP;AACD;;;gDACuB;AACtB,iBAAO,KAAKmE,IAAL,CAAUM,GAAV,qBAAP;AACD;;;mCACUvC,I,EAAM;AACf,iBAAO,KAAKiC,IAAL,CAAUM,GAAV,mBAAgCvC,IAAhC,EAAP;AACD;;;yCACcA,I,EAAM;AACrB,iBAAO,KAAKiC,IAAL,CAAUM,GAAV,mBAAkCvC,IAAlC,EAAP;AACD;;;;;;;uBA/BUkD,W,EAAW,uH;AAAA,K;;;aAAXA,W;AAAW,eAAXA,WAAW,K;AAAA,kBAFV;;;;;sEAEDA,W,EAAW;cAHvB,wDAGuB;eAHZ;AACVH,oBAAU,EAAE;AADF,S;AAGY,Q;;;;;;;;;;;;;;;;;;;;;;ACRxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAMaM,8B;;;AAEX,8CAAoBpF,MAApB,EAAoC;AAAA;;AAAhB,aAAAA,MAAA,GAAAA,MAAA;AAAmB;;;;qCAE1B2C,Q,EAAUC,Q,EAAU;AAC/B,cAAID,QAAQ,KAAK,OAAb,IAAwBC,QAAQ,KAAK,OAAzC,EAAkD;AAChD;AACA4B,0BAAc,CAACC,OAAf,CAAuB,UAAvB,EAAmC9B,QAAnC;AAEA,mBAAO,IAAP;AACD,WALD,MAKO;AACL,mBAAO,KAAP;AACD;AACF;;;yCAGgB;AACf,cAAMiC,IAAI,GAAGJ,cAAc,CAACE,OAAf,CAAuB,UAAvB,CAAb;;AACA,cAAIE,IAAI,KAAK,IAAb,EAAmB;AACjB,mBAAO,KAAP;AACD,WAFD,MAEO;AACL,mBAAO,IAAP;AACD;AACF;;;iCAEQ;AACPJ,wBAAc,CAACK,UAAf,CAA0B,UAA1B;AACD;;;;;;;uBA3BUO,8B,EAA8B,8G;AAAA,K;;;aAA9BA,8B;AAA8B,eAA9BA,8BAA8B,K;AAAA,kBAF7B;;;;;sEAEDA,8B,EAA8B;cAH1C,wDAG0C;eAH/B;AACVN,oBAAU,EAAE;AADF,S;AAG+B,Q;;;;;;;;;;;;;;;;;;;;;;ACN3C;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQaO,+B;;;AAEX,+CAAoB3C,0BAApB,EAA4E;AAAA;;AAAxD,aAAAA,0BAAA,GAAAA,0BAAA;AAA2D;;;;kCAErE4C,O,EAA2BC,I,EAAmB;AACtD;AACA;AACA;AACA,cAAItB,qBAAqB,GAAG,KAAKvB,0BAAL,CAAgC8C,qBAAhC,EAA5B;AACA,cAAI7C,QAAQ,GAAG,KAAKD,0BAAL,CAAgCiC,oBAAhC,EAAf;;AAEA,cAAIV,qBAAqB,IAAItB,QAA7B,EAAuC;AACrC2C,mBAAO,GAAGA,OAAO,CAACG,KAAR,CAAc;AACtBC,wBAAU,EAAG;AACXrB,6BAAa,EAAGJ;AADL;AADS,aAAd,CAAV;AAKD;;AACD,iBAAOsB,IAAI,CAACI,MAAL,CAAYL,OAAZ,CAAP;AACD;;;;;;;uBAnBUD,+B,EAA+B,gJ;AAAA,K;;;aAA/BA,+B;AAA+B,eAA/BA,+BAA+B,K;AAAA,kBAF9B;;;;;sEAEDA,+B,EAA+B;cAH3C,wDAG2C;eAHhC;AACVP,oBAAU,EAAE;AADF,S;AAGgC,Q;;;;;;;;;;;;;;;;;;;;;;ACR5C;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQac,iB;;;AAEX,iCAAoBnD,oBAApB,EAAkFzC,MAAlF,EAAkG;AAAA;;AAA9E,aAAAyC,oBAAA,GAAAA,oBAAA;AAA8D,aAAAzC,MAAA,GAAAA,MAAA;AAAmB;;;;oCAEzF6F,K,EAA+BC,K,EAA4B;AACrE,cAAI,KAAKrD,oBAAL,CAA0BS,cAA1B,EAAJ,EAA+C;AAC7C,mBAAO,IAAP;AAED,WAHD,MAGO;AACL,iBAAKlD,MAAL,CAAYS,QAAZ,CAAqB,CAAC,OAAD,CAArB;AACA,mBAAO,KAAP;AACD;AACF;;;;;;;uBAZUmF,iB,EAAiB,wJ,EAAA,8G;AAAA,K;;;aAAjBA,iB;AAAiB,eAAjBA,iBAAiB,K;AAAA,kBAFhB;;;;;sEAEDA,iB,EAAiB;cAH7B,wDAG6B;eAHlB;AACVd,oBAAU,EAAE;AADF,S;AAGkB,Q;;;;;;;;;;;;;;;;;;;;;;;;ACR9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACGI;;AAAwF;;AAAuB;;;;;;AAC/G;;AAAsH;;AAAmC;;;;;;AAcnJ;;AACE;;AACF;;;;;;AAFiD;;AAC/C;;AAAA;;;;ADdL,QAAMiB,SAAS,GAAc;AAClClG,QAAE,EAAE,IAD8B;AAElCkC,UAAI,EAAE;AAF4B,KAA7B,C,CAIP;AACA;AACA;AACA;AACA;;QAMaiE,oB;;;AAUX,oCAAoBpE,WAApB,EAAsD5B,MAAtD,EAAsE;AAAA;;AAAlD,aAAA4B,WAAA,GAAAA,WAAA;AAAkC,aAAA5B,MAAA,GAAAA,MAAA;AARtD,aAAAO,KAAA,GAAe;AACbV,YAAE,EAAE,IADS;AAEbkC,cAAI,EAAJA,IAFa;AAGbgE,mBAAS,EAATA;AAHa,SAAf;AAOA,aAAAE,UAAA,GAAa,KAAb;AACyE;;;;mCAEjE;AACJ,eAAKC,gBAAL;AACH;;;oCAEa;AAAA;;AACV,eAAKtE,WAAL,CAAiBE,gBAAjB,CAAkC,KAAKvB,KAAL,CAAWwB,IAA7C,EACG5B,SADH,CACa,UAAA6B,IAAI,EAAI;AACjB,kBAAI,CAACmE,cAAL,GAAsBnE,IAAtB;AACA3B,mBAAO,CAACC,GAAR,CAAY,4BAA4B,MAAI,CAAC6F,cAA7C;;AACA,gBAAI,MAAI,CAACA,cAAL,KAAwB,IAA5B,EAAkC;AAChC,oBAAI,CAACF,UAAL,GAAkB,IAAlB;AACD,aAFD,MAEO;AACH,oBAAI,CAACrE,WAAL,CAAiBlB,WAAjB,CAA6B,MAAI,CAACH,KAAlC,EACGJ,SADH,CACa,UAAA6B,IAAI;AAAA,uBACb3B,OAAO,CAACC,GAAR,CAAY,8BAA8B0B,IAA1C,CADa;AAAA,eADjB;;AAGA,oBAAI,CAAChC,MAAL,CAAYS,QAAZ,CAAqB,CAAC,OAAD,CAArB;AACD;AACJ,WAZH;AAaD;;;2CAEkB;AAAA;;AACjB,eAAKmB,WAAL,CAAiBwE,qBAAjB,GACKjG,SADL,CACe,UAAA6B,IAAI,EAAI;AACnB3B,mBAAO,CAACC,GAAR,CAAY,iCAAZ;AACAD,mBAAO,CAACC,GAAR,CAAY0B,IAAZ;AACA,kBAAI,CAACqE,UAAL,GAAkBrE,IAAlB;AACC,WALL;AAMH;;;;;;;uBAvCUgE,oB,EAAoB,uI,EAAA,uH;AAAA,K;;;YAApBA,oB;AAAoB,uC;AAAA,e;AAAA,a;AAAA,giB;AAAA;AAAA;AClBjC;;AACE;;AACE;;AACA;;AACF;;AACA;;AACE;;AACE;;AAAO;;AAAI;;AAAY;;AAAK;;AAC5B;;AAAsF;AAAA;AAAA;;AAAtF;;AACF;;AAEA;;AACE;;AACA;;AAAO;;AAAI;;AAAkB;;AAAK;;AAClC;;AACA;;AACF;;AAAY;AAAA;AAAA;;AACN;;AAGF;;AAEF;;AACA;;AAAI;;AACN;;AACA;;AAAsB;AAAA,mBAAS,IAAAM,SAAA,EAAT;AAAoB,WAApB;;AAA8C;;AAAW;;AACjF;;AACF;;;;;;AAzBkD;;AAAA;;AACA;;AAAA;;AAK0C;;AAAA;;AAQ5E;;AAAA;;AACM;;AAAA;;;;;;;;;sEDCTN,oB,EAAoB;cALhC,uDAKgC;eALtB;AACTrF,kBAAQ,EAAE,kBADD;AAETC,qBAAW,EAAE,+BAFJ;AAGTC,mBAAS,EAAE,CAAC,8BAAD;AAHF,S;AAKsB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEnBjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAWa0F,oB;;;AASX,oCAAoB3E,WAApB,EAAsDiE,KAAtD,EAA6E;AAAA;;AAAzD,aAAAjE,WAAA,GAAAA,WAAA;AAAkC,aAAAiE,KAAA,GAAAA,KAAA;AANtD,aAAAtF,KAAA,GAAe;AACbV,YAAE,EAAE,IADS;AAEbkC,cAAI,EAAJA,IAFa;AAGbgE,mBAAS,EAAT;AAHa,SAAf;AAMgF;;;;mCAExE;AACN,eAAKS,UAAL,GAAkB,KAAKX,KAAL,CAAWY,QAAX,CAAoBC,MAApB,CAA2B3E,IAA7C;AACA,eAAK4E,SAAL;AACF;;;oCACY;AAAA;;AACV,eAAK/E,WAAL,CAAiBgF,UAAjB,CAA4B,KAAKJ,UAAjC,EACGrG,SADH,CACa,UAAA0G,KAAK,EAAI;AAChB,kBAAI,CAACtG,KAAL,GAAasG,KAAb;AACH,WAHH;AAID;;;;;;;uBApBUN,oB,EAAoB,uI,EAAA,+H;AAAA,K;;;YAApBA,oB;AAAoB,uC;AAAA,e;AAAA,a;AAAA,wJ;AAAA;AAAA;ACVjC;;AACM;;AAAI;;AAAqB;;AACzB;;AAAI;;AAA4B;;AAChC;;AAAK;;AAAwB;;AAC7B;;AACA;;AAA6D;;AAAoD;;AAAoB;;AAC3I;;;;AALU;;AAAA;;AAEC;;AAAA;;;;;;;;;sEDOEA,oB,EAAoB;cALhC,uDAKgC;eALtB;AACT5F,kBAAQ,EAAE,kBADD;AAETC,qBAAW,EAAE,+BAFJ;AAGTC,mBAAS,EAAE,CAAC,8BAAD;AAHF,S;AAKsB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEXjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACIM;;AAAsH;;AAAmC;;;;;;AAczJ;;AACE;;AACF;;;;;;AAFiD;;AAC/C;;AAAA;;;;QDdKiG,K,GACX,eAAmBjH,EAAnB,EACmBkC,IADnB,EAEmBgE,SAFnB,EAEyC;AAAA;;AAFtB,WAAAlG,EAAA,GAAAA,EAAA;AACA,WAAAkC,IAAA,GAAAA,IAAA;AACA,WAAAgE,SAAA,GAAAA,SAAA;AAClB,K;;QAEUgB,S,GACX,mBAAmBlH,EAAnB,EACmBkC,IADnB,EACiC;AAAA;;AADd,WAAAlC,EAAA,GAAAA,EAAA;AACA,WAAAkC,IAAA,GAAAA,IAAA;AAClB,K;;QAOUiF,c;;;AAWX,8BAAoBhH,MAApB,EAA4CD,YAA5C,EAA+EkH,cAA/E,EAA+G;AAAA;;AAA3F,aAAAjH,MAAA,GAAAA,MAAA;AAAwB,aAAAD,YAAA,GAAAA,YAAA;AAAmC,aAAAkH,cAAA,GAAAA,cAAA;AAR/E,aAAA1G,KAAA,GAAe;AACbV,YAAE,EAAE,KAAKA,EADI;AAEbkC,cAAI,EAAJA,IAFa;AAGbgE,mBAAS,EAAT;AAHa,SAAf;AAMA,aAAAlE,KAAA,GAAQ,KAAR;AAEkH;;;;mCAE1G;AACN;AACA,eAAKhC,EAAL,GAAU,KAAKoH,cAAL,CAAoBR,QAApB,CAA6BC,MAA7B,CAAoC7G,EAA9C;AACAQ,iBAAO,CAACC,GAAR,CAAY,eAAe,KAAKT,EAAhC,EAHM,CAIN;;AAEA,cAAI,KAAKA,EAAL,IAAW,IAAf,EAAqB;AACnB,iBAAKqH,YAAL;AACD;;AACD,eAAKhB,gBAAL;AAEA7F,iBAAO,CAACC,GAAR,CAAY,mCAAmC,KAAK+F,UAApD;AACD;;;uCACkB;AAAA;;AACb,eAAKtG,YAAL,CAAkBoH,iBAAlB,CAAoC,KAAKtH,EAAzC,EACGM,SADH,CACc,UAAAC,QAAQ,EAAI;AACtBC,mBAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,kBAAI,CAACG,KAAL,GAAaH,QAAb;AACD,WAJH;AAKD;;;2CACkB;AAAA;;AACjB,eAAKL,YAAL,CAAkBqG,qBAAlB,GACCjG,SADD,CACW,UAAA6B,IAAI,EAAI;AACnB3B,mBAAO,CAACC,GAAR,CAAY,iCAAZ;AACAD,mBAAO,CAACC,GAAR,CAAY0B,IAAZ;AACA,mBAAI,CAACqE,UAAL,GAAkBrE,IAAlB;AACD,WALC;AAML;;;sCAEiB;AACV,eAAKjC,YAAL,CAAkBqH,WAAlB,CAA8B,KAAK7G,KAAL,CAAWV,EAAzC,EAA6C,KAAKU,KAAlD,EACGJ,SADH,CACa,UAAA6B,IAAI;AAAA,mBACb3B,OAAO,CAACC,GAAR,CAAY,8BAA8B0B,IAA1C,CADa;AAAA,WADjB;AAGA,eAAKhC,MAAL,CAAYS,QAAZ,CAAqB,CAAC,OAAD,CAArB;AACP;;;;;;;uBA/CUuG,c,EAAc,uH,EAAA,uI,EAAA,+H;AAAA,K;;;YAAdA,c;AAAc,gC;AAAA,e;AAAA,a;AAAA,yjB;AAAA;AAAA;ACpB3B;;AACE;;AAAM;AAAA,mBAAY,IAAAI,WAAA,EAAZ;AAAyB,WAAzB;;AACJ;;AACE;;AACF;;AAEA;;AACE;;AAAO;;AAAI;;AAAY;;AAAK;;AAC1B;;AAAwC;AAAA;AAAA;;AAAxC;;AACJ;;AAEA;;AACE;;AACA;;AAAO;;AAAI;;AAAkB;;AAAK;;AAClC;;AACJ;;AACE;;AAAiD;AAAA;AAAA;;AAC/C;;AAGF;;AACF;;AACI;;AAAI;;AACV;;AACI;;AAA8C;;AAAY;;AAC5D;;AACF;;;;;;AAvBoD;;AAAA;;AAKJ;;AAAA;;AAQhC;;AAAA,4GAAoC,OAApC,EAAoC,mBAApC;;AACE;;AAAA;;;;;;;;;sEDGLJ,c,EAAc;cAL1B,uDAK0B;eALhB;AACTrG,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,uBAAD;AAHF,S;AAKgB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AErB3B;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMwG,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAInH,OAAO,CAACwB,KAAR,CAAc2F,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport {Waste} from '../waste/waste.component';\nimport {DataService} from '../service/data/data.service';\nimport {Router} from '@angular/router';\n\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  waste: Waste[];\n\n  constructor(private wasteService: DataService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.showWaste();\n  }\n  showWaste() {\n    this.wasteService.retrieveAllWaste().subscribe(\n      response => {\n        console.log(\"Retrieve all waste for list them in admin page: \");\n        console.log(response);\n        this.waste = response;\n      });\n  }\n\n\n  deleteWaste(id) {\n    this.wasteService.deleteWaste(id).subscribe(\n      response => {\n        console.log(response);\n        console.log(`Delete waste ${id} successful`);\n        this.showWaste();\n      });\n  }\n\n  updateWaste(id) {\n    this.router.navigate(['waste', id]);\n  }\n  createWaste() {\n    this.router.navigate(['waste']);\n  }\n}\n","\n<div class=\"main-container\">\n  <h2>Lista odpadów</h2><hr class=\"my-4\">\n\n\n  <button type=\"button\" class=\"btn btn-success\" (click)=\"createWaste()\">Dodaj odpad</button>\n\n  <br><br>\n  <table class=\"table\">\n    <thead>\n    <tr>\n<!--      <th scope=\"col\">ID</th>-->\n      <th scope=\"col\">Nazwa</th>\n      <th scope=\"col\">Typ odpadu</th>\n      <th scope=\"col\">Update</th>\n      <th scope=\"col\">Delete</th>\n    </tr>\n    </thead>\n    <tbody>\n    <tr *ngFor=\"let wasteData of waste\">\n<!--      <th scope=\"row\">{{wasteData.id}}</th>-->\n      <td>{{wasteData.name}}</td>\n      <td>{{wasteData.wasteType.name}}</td>\n      <td><button (click)=\"updateWaste(wasteData.id)\" class=\"btn btn-primary\">Update</button></td>\n      <td><button (click)=\"deleteWaste(wasteData.id)\" class=\"btn btn-danger\">Delete</button></td>\n    </tr>\n    </tbody>\n  </table>\n\n</div>\n\n\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'WasteApp';\n}\n","\n\n<app-menu></app-menu>\n\n<router-outlet></router-outlet>\n\n<app-footer></app-footer>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {LocationStrategy, HashLocationStrategy} from '@angular/common';\n\nimport { AppComponent } from './app.component';\nimport { MenuComponent } from './menu/menu.component';\nimport {RoutingModule} from './routing.module';\nimport { LoginComponent } from './login/login.component';\nimport {HomeComponent} from './home/home.component';\nimport { AdminComponent } from './admin/admin.component';\nimport { ErrorComponent } from './error/error.component';\nimport {FormsModule} from '@angular/forms';\nimport { LogoutComponent } from './logout/logout.component';\nimport {HTTP_INTERCEPTORS, HttpClient, HttpClientModule, HttpHandler} from '@angular/common/http';\nimport {HttpIntercepterBasicAuthService} from './service/http/http-intercepter-basic-auth.service';\nimport { FooterComponent } from './footer/footer.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {BsDropdownModule} from 'ngx-bootstrap';\nimport {WasteComponent} from './waste/waste.component';\nimport {MatSelectModule} from '@angular/material/select';\nimport { CreateWasteComponent } from './waste/create-waste/create-waste.component';\nimport { SearchWasteComponent } from './waste/search-waste/search-waste.component';\nimport { MetalsComponent } from './info/metals/metals.component';\nimport { GlassComponent } from './info/glass/glass.component';\nimport { PaperComponent } from './info/paper/paper.component';\nimport { BioComponent } from './info/bio/bio.component';\nimport { MixedComponent } from './info/mixed/mixed.component';\nimport {MatToolbarModule} from '@angular/material/toolbar';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MenuComponent,\n    LoginComponent,\n    HomeComponent,\n    AdminComponent,\n    ErrorComponent,\n    LogoutComponent,\n    FooterComponent,\n    WasteComponent,\n    CreateWasteComponent,\n    SearchWasteComponent,\n    MetalsComponent,\n    GlassComponent,\n    PaperComponent,\n    BioComponent,\n    MixedComponent\n  ],\n  imports: [\n    BrowserModule,\n    RoutingModule,\n    FormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    BrowserModule, FormsModule, BsDropdownModule.forRoot(),\n    MatSelectModule, MatToolbarModule],\n  providers: [\n    {provide: HTTP_INTERCEPTORS, useClass: HttpIntercepterBasicAuthService, multi: true},\n    {provide: LocationStrategy, useClass: HashLocationStrategy}\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.css']\n})\nexport class ErrorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n\n<br>\n<h1 style=\"color: red\">Taka strona nie istnieje!</h1>\n<button style=\"btn btn-success\" routerLink=\"/home\">Wroć</button>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"footer\">\nRecycleBin Company copyright @2020\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {DataService} from '../service/data/data.service';\nimport {Waste} from '../waste/waste.component';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  // waste: Waste;\n  exists: boolean;\n  name: string;\n  error = false;\n\n  constructor(private router: Router, private dataService: DataService) { }\n\n  ngOnInit() {\n  }\n\n  searchWaste() {\n    this.dataService.findByNameExists(this.name)\n      .subscribe(data => {\n        this.exists = data;\n        console.log(\"this.exists in isExists\" + this.exists);\n\n        if (this.exists === true) {\n          this.router.navigate(['search', this.name]);\n        } else {\n          this.error = true;\n        }\n      });\n  }\n\n\n}\n","\n<div class=\"main-container\">\n  <div class=\"alert-login-container\">\n    <div class=\"alert alert-warning\" role=\"alert\" *ngIf=\"error\" style=\"color: red\">Nie znaleziono takiego odpadu</div>\n  </div>\n  <form (ngSubmit)=\"searchWaste()\">\n  <div class=\"search-container\">\n    <h1 style=\"color: #3f51b5\">Wyszukaj</h1>\n    <div class=\"input-group input-group-lg\">\n      <input type=\"text\" class=\"form-control\" [(ngModel)]=\"name\" name=\"name\" aria-label=\"Large\" aria-describedby=\"inputGroup-sizing-sm\" placeholder=\"SZUKAJ...\">\n      <div class=\"input-group-prepend\">\n        <button type=\"submit\" class=\"btn btn-success\"><i class=\"fa fa-search\"></i></button>\n      </div>\n    </div>\n  </div>\n  </form>\n  <div class=\"waste-blocks-container\">\n\n    <a class=\"btn waste-container\" style=\"background-color: #f8c605\" routerLink=\"/metals\">\n        <br>\n      <h2>METALE I</h2>\n      <h2>TWORZYWA</h2>\n      <h2>SZTUCZNE</h2>\n    </a>\n\n    <a class=\"btn waste-container\" style=\"background-color: #86ba3e\" routerLink=\"/glass\">\n      <br><br>\n      <h2 style=\"text-align: center\">SZKŁO</h2>\n    </a>\n\n    <a class=\"btn waste-container\" style=\"background-color: #36aadd\" routerLink=\"/paper\">\n      <br><br>\n      <h2 style=\"text-align: center\">PAPIER</h2>\n    </a>\n\n    <a class=\"btn waste-container\" style=\"background-color: #aa7436\" routerLink=\"/bio\">\n      <br><br>\n      <h2 style=\"text-align: center\">BIO</h2>\n    </a>\n\n    <a class=\"btn waste-container\" style=\"background-color: #7792b0\" routerLink=\"/mixed\">\n      <br><br>\n      <h2 style=\"text-align: center\">ZMIESZANE </h2>\n    </a>\n  </div>\n</div>\n\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-bio',\n  templateUrl: './bio.component.html',\n  styleUrls: ['./bio.component.css']\n})\nexport class BioComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<img src=\"https://n-16-3.dcs.redcdn.pl/file/o2/tvn/web-content/m/orig/p121/i/11108a3dbfe4636cb40b84b803b2fff6/57177219-8491-407a-ae48-42364d7200fc.png\">\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-glass',\n  templateUrl: './glass.component.html',\n  styleUrls: ['./glass.component.css']\n})\nexport class GlassComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<img src=\"https://n-16-1.dcs.redcdn.pl/file/o2/tvn/web-content/m/orig/p121/i/11108a3dbfe4636cb40b84b803b2fff6/3cf7efd0-bc87-463e-92b7-7d3718d0572b.png\">\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-metals',\n  templateUrl: './metals.component.html',\n  styleUrls: ['./metals.component.css']\n})\nexport class MetalsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<img src=\"https://n-16-7.dcs.redcdn.pl/file/o2/tvn/web-content/m/orig/p121/i/11108a3dbfe4636cb40b84b803b2fff6/7c91d252-3b65-4540-8bb9-93e78298c5dd.png\">\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-mixed',\n  templateUrl: './mixed.component.html',\n  styleUrls: ['./mixed.component.css']\n})\nexport class MixedComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<img src=\"https://n-16-3.dcs.redcdn.pl/file/o2/tvn/web-content/m/orig/p121/i/11108a3dbfe4636cb40b84b803b2fff6/acc2aad5-f86a-4a4d-b846-39727b787289.png\">\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-paper',\n  templateUrl: './paper.component.html',\n  styleUrls: ['./paper.component.css']\n})\nexport class PaperComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<img src=\"https://n-16-5.dcs.redcdn.pl/file/o2/tvn/web-content/m/orig/p121/i/11108a3dbfe4636cb40b84b803b2fff6/d03e8703-edb1-4194-9ed7-f7e927ffd2e3.png\">\n","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {HardcodedAuthenticationService} from '../service/hardcoded-authentication.service';\nimport {BasicAuthenticationService} from '../service/basic-authentication.service';\nimport { from } from 'rxjs';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  // two way binding with ngModel in login.html\n  username = '';\n  password = '';\n\n  showLoginError = false;\n  loginErrorMessage = 'Nieprawidłowy login lub hasło. Zaloguj się ponownie.';\n\n  showAlreadyLoggedError = false;\n  alreadyLoggedErrorMessage = 'Błąd! Jesteś już zalogowany! ';\n\n  constructor(private router: Router,\n              private hardcodedAuthService: HardcodedAuthenticationService,\n              private basicAuthenticationService: BasicAuthenticationService) {\n  }\n\n  ngOnInit() {\n\n  }\n\n\n  login() {\n    if (this.hardcodedAuthService.authenticate(this.username, this.password)) {\n      this.router.navigate(['admin']);\n      this.showLoginError = false;\n    } else {\n      this.showLoginError = true;\n    }\n  }\n\n  basicAuthLogin() {\n    if (this.basicAuthenticationService.isUserLoggedIn()) {\n        this.showAlreadyLoggedError = true;\n        setTimeout(() => { this.router.navigate(['admin']);}, 1500);\n    } else {\n      this.basicAuthenticationService.executeAuthenticationService(this.username, this.password)\n        .subscribe(\n          data => {\n            console.log(data);\n            this.router.navigate(['admin']);\n            this.showLoginError = false;\n          },\n          error => {\n            console.log(error);\n            this.showLoginError = true;\n          });\n    }\n  }\n\n\n}\n\n\n","\n<div class=\"alert-login-container\">\n  <div class=\"alert alert-warning\" role=\"alert\" *ngIf=\"showLoginError\" style=\"color: red\">{{loginErrorMessage}}</div>\n  <div class=\"alert alert-warning\" role=\"alert\" *ngIf=\"showAlreadyLoggedError\" style=\"color: red\">{{alreadyLoggedErrorMessage}}</div>\n\n</div>\n\n<div class=\"loginForm-container\">\n  <form>\n    <div class=\"form-group\">\n      <label>Login</label>\n      <input type=\"text\" class=\"form-control\" name=\"username\"  [(ngModel)]=\"username\">\n    </div>\n    <div class=\"form-group\">\n      <label>Password</label>\n      <input type=\"password\" class=\"form-control\" name=\"password\" [(ngModel)]=\"password\">\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\" (click)=basicAuthLogin()>Zaloguj</button>\n  </form>\n\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport {HardcodedAuthenticationService} from '../service/hardcoded-authentication.service';\nimport {ActivatedRoute, Router} from '@angular/router';\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.css']\n})\nexport class LogoutComponent implements OnInit {\n\n  logoutMessage = 'Zostałeś wylogowany i za chwilę zostaniesz automatycznie przekierowany na stronę głowną.';\n\n  constructor(private router: Router, private hardcodedAuthService: HardcodedAuthenticationService) { }\n\n  ngOnInit(): void {\n    //delete user from session\n    this.hardcodedAuthService.logout();\n    //after 2 seconds redirecting to home page\n    setTimeout(() =>\n      { this.router.navigate(['/']);}, 1500);\n\n  }\n\n}\n","\n<div class=\"alert-logout-container\">\n  <div class=\"alert alert-warning\" role=\"alert\" style=\"color: red\">{{logoutMessage}}</div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport {HardcodedAuthenticationService} from '../service/hardcoded-authentication.service';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n\n\n  constructor(public hardcodedAuthService: HardcodedAuthenticationService) { }\n\n  ngOnInit(): void {\n\n  }\n\n}\n","\n<mat-toolbar color=\"primary\">\n  <mat-toolbar-row>\n    <span class=\"spacer2\"><a routerLink=\"/\"><h1 class=\"text-white\">WasteApp </h1></a></span>\n    <span><a *ngIf=\"hardcodedAuthService.isUserLoggedIn()\" routerLink=\"/admin\"><h2 class=\"text-white\"> Admin</h2></a></span>\n\n    <span class=\"spacer\"></span>\n    <span><a *ngIf=\"!hardcodedAuthService.isUserLoggedIn()\" routerLink=\"/login\"><h2 class=\"text-white\">Zaloguj</h2></a></span>\n    <span><a *ngIf=\"hardcodedAuthService.isUserLoggedIn()\" routerLink=\"/logout\"><h2 class=\"text-white\">Wyloguj</h2></a></span>\n  </mat-toolbar-row>\n</mat-toolbar>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport {LoginComponent} from './login/login.component';\nimport {HomeComponent} from './home/home.component';\nimport {AdminComponent} from './admin/admin.component';\nimport {ErrorComponent} from './error/error.component';\nimport {LogoutComponent} from './logout/logout.component';\nimport {RouteGuardService} from './service/route-guard.service';\nimport {WasteComponent} from './waste/waste.component';\nimport {CreateWasteComponent} from './waste/create-waste/create-waste.component';\nimport {SearchWasteComponent} from './waste/search-waste/search-waste.component';\nimport {MetalsComponent} from './info/metals/metals.component';\nimport {GlassComponent} from './info/glass/glass.component';\nimport {MixedComponent} from './info/mixed/mixed.component';\nimport {BioComponent} from './info/bio/bio.component';\nimport {PaperComponent} from './info/paper/paper.component';\n\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent},\n  { path: 'home', component: HomeComponent},\n  { path: 'login', component: LoginComponent},\n  { path: 'admin', component: AdminComponent, canActivate: [RouteGuardService]},\n  { path: 'logout', component: LogoutComponent, canActivate: [RouteGuardService]},\n  {path: 'waste', component: CreateWasteComponent, canActivate: [RouteGuardService]},\n  {path: 'waste/:id', component: WasteComponent, canActivate: [RouteGuardService]},\n  {path: 'search/:name', component: SearchWasteComponent},\n  {path: 'metals', component: MetalsComponent},\n  {path: 'glass', component: GlassComponent},\n  {path: 'bio', component: BioComponent},\n  {path: 'mixed', component: MixedComponent},\n  {path: 'paper', component: PaperComponent},\n  { path: 'error', component: ErrorComponent },\n  { path: '**', component: ErrorComponent }\n\n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [RouterModule]\n})\nexport class RoutingModule { }\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {map} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BasicAuthenticationService {\n\n  constructor(private http: HttpClient) { }\n\n  // authenticate(username, password) {\n  //   if (username === 'admin' && password === 'admin') {\n  //     //Session Storage items:   key   /  value\n  //     sessionStorage.setItem('authUser', username);\n  //     return true;\n  //   } else {\n  //     return false;\n  //   }\n  // }\n  // isUserLoggedIn() {\n  //   let user = sessionStorage.getItem('authUser');\n  //   if(user === null) {\n  //     return false;\n  //   }else {\n  //     return true;\n  //   }\n  // }\n\n  executeAuthenticationService(username, password) {\n\n    let basicAuthHeaderString = 'Basic ' + window.btoa(username + ':' + password);\n\n    let headers = new HttpHeaders({\n        Authorization: basicAuthHeaderString\n    });\n\n    return this.http.get<AuthenticationBean>(\n      `/basicauth`,\n      {headers}).pipe(\n        map(\n          data => {\n            sessionStorage.setItem('authUser', username);\n            sessionStorage.setItem('token', basicAuthHeaderString);\n            return data;\n          }\n        )\n    );\n\n  }\n\n  getAuthenticatedUser() {\n    return sessionStorage.getItem('authUser');\n  }\n\n  getAuthenticatedToken() {\n    if(this.getAuthenticatedUser())\n      return sessionStorage.getItem('token');\n  }\n\n  isUserLoggedIn() {\n    let user = sessionStorage.getItem('authUser');\n    return !(user === null);\n  }\n\n  logout() {\n    sessionStorage.removeItem('authUser');\n    sessionStorage.removeItem('token');\n  }\n\n}\nexport class AuthenticationBean {\n  constructor(public message: string) {\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Waste, WasteComponent, WasteType} from '../../waste/waste.component';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  constructor(private http: HttpClient) { }\n\n    createWaste(waste) {\n    return this.http.post(\n      `/admin/waste`\n      , waste);\n    }\n    updateWaste(id, waste) {\n      return this.http.put(\n        `/admin/waste/${id}`\n        , waste);\n    }\n    retrieveAllWaste() {\n      return this.http.get<Waste[]>(`/admin/waste`);\n    }\n    retrieveWasteById(id) {\n      return this.http.get<Waste>(`/admin/wasteById/${id}`);\n    }\n    deleteWaste(id) {\n      return this.http.delete(`/admin/waste/${id}`);\n    }\n    retrieveAllWasteTypes() {\n      return this.http.get<WasteType[]>(`/admin/wasteTypes`);\n    }\n    findByName(name) {\n      return this.http.get<Waste>(`/search/${name}`);\n    }\n  findByNameExists(name) {\n    return this.http.get<boolean>(`/exists/${name}`);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {Router} from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HardcodedAuthenticationService {\n\n  constructor(private router: Router) { }\n\n  authenticate(username, password) {\n    if (username === 'admin' && password === 'admin') {\n      // Session Storage items:   key   /  value\n      sessionStorage.setItem('authUser', username);\n\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n\n  isUserLoggedIn() {\n    const user = sessionStorage.getItem('authUser');\n    if (user === null) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  logout() {\n    sessionStorage.removeItem('authUser');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\nimport {BasicAuthenticationService} from '../basic-authentication.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpIntercepterBasicAuthService implements HttpInterceptor {\n\n  constructor(private basicAuthenticationService: BasicAuthenticationService) { }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler) {\n    // let username = ' ';\n    // let password = ' ';\n    // let basicAuthHeaderString = 'Basic ' + window.btoa(username + ':' + password);\n    let basicAuthHeaderString = this.basicAuthenticationService.getAuthenticatedToken();\n    let username = this.basicAuthenticationService.getAuthenticatedUser();\n\n    if (basicAuthHeaderString && username) {\n      request = request.clone({\n        setHeaders : {\n          Authorization : basicAuthHeaderString\n        }\n      });\n    }\n    return next.handle(request);\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree} from '@angular/router';\nimport {Observable} from 'rxjs';\nimport {HardcodedAuthenticationService} from './hardcoded-authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RouteGuardService implements CanActivate {\n\n  constructor(private hardcodedAuthService: HardcodedAuthenticationService, private router: Router) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    if (this.hardcodedAuthService.isUserLoggedIn()){\n      return true;\n\n    } else {\n      this.router.navigate(['login']);\n      return false;\n    }\n  }\n\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport {DataService} from '../../service/data/data.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {Waste, WasteComponent, WasteType} from '../waste.component';\n\nexport const wasteType: WasteType = {\n  id: null,\n  name: ''\n};\n// export const waste: Waste = {\n//   id: null,\n//   name: '',\n//   wasteType\n// };\n@Component({\n  selector: 'app-create-waste',\n  templateUrl: './create-waste.component.html',\n  styleUrls: ['./create-waste.component.css']\n})\nexport class CreateWasteComponent implements OnInit {\n\n  waste: Waste = {\n    id: null,\n    name,\n    wasteType\n  };\n  wasteTypes: WasteType[];\n  isAlreadyExist: boolean;\n  wasteError = false;\n  constructor(private dataService: DataService, private router: Router) { }\n\n  ngOnInit(): void {\n      this.getAllWasteTypes();\n  }\n\n    saveWaste() {\n      this.dataService.findByNameExists(this.waste.name)\n        .subscribe(data => {\n          this.isAlreadyExist = data;\n          console.log(\"this.exists in isExists\" + this.isAlreadyExist);\n          if (this.isAlreadyExist === true) {\n            this.wasteError = true;\n          } else {\n              this.dataService.createWaste(this.waste)\n                .subscribe(data =>\n                  console.log('Created waste with data: ' + data));\n              this.router.navigate(['admin']);\n            }\n        });\n    }\n\n    getAllWasteTypes() {\n      this.dataService.retrieveAllWasteTypes()\n          .subscribe(data => {\n          console.log('method getAllWastesTypes called');\n          console.log(data);\n          this.wasteTypes = data;\n          });\n  }\n}\n","\n<div class=\"main-container\">\n  <div class=\"alert-login-container\">\n    <div class=\"alert alert-warning\" role=\"alert\" *ngIf=\"isAlreadyExist\" style=\"color: red\">Taki odpad już istnieje</div>\n    <div class=\"alert alert-warning\" role=\"alert\" *ngIf=\"name.invalid && (name.dirty || name.touched)\" style=\"color: red\">Nazwa musi mieć conajmniej 3 litery</div>\n  </div>\n  <form>\n    <div class=\"form-group\">\n      <label><h2>Nazwa odpadu</h2></label>\n      <input type=\"text\" class=\"form-control\" name=\"name\" id=\"name\"  required minlength=\"3\" [(ngModel)]=\"waste.name\" #name=\"ngModel\">\n    </div>\n\n    <div class=\"form-group\">\n      <br>\n      <label><h2>Wybierz typ odpadu</h2></label>\n      <br>\n      <mat-form-field>\n    <mat-select [(value)]=\"waste.wasteType\" name=\"type\">\n          <mat-option *ngFor=\"let wasteType of wasteTypes\" [value]=\"wasteType\">\n            {{wasteType.name}}\n          </mat-option>\n        </mat-select>\n\n      </mat-form-field>\n      <br><br>\n    </div>\n    <button type=\"submit\" (click)=\"saveWaste()\" class=\"btn btn-primary\">Dodaj odpad</button>\n  </form>\n</div>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport {DataService} from '../../service/data/data.service';\nimport {ActivatedRoute} from '@angular/router';\nimport {Waste, WasteType} from '../waste.component';\nimport {wasteType} from '../create-waste/create-waste.component';\n\n@Component({\n  selector: 'app-search-waste',\n  templateUrl: './search-waste.component.html',\n  styleUrls: ['./search-waste.component.css']\n})\nexport class SearchWasteComponent implements OnInit {\n\n  passedName: string;\n  waste: Waste = {\n    id: null,\n    name,\n    wasteType\n  }\n\n  constructor(private dataService: DataService, private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.passedName = this.route.snapshot.params.name;\n    this.findWaste();\n }\n  findWaste() {\n    this.dataService.findByName(this.passedName)\n      .subscribe(value => {\n          this.waste = value;\n      });\n  }\n}\n","\n<div class=\"main-container\">\n      <h1>Odpad: {{waste.name}}</h1>\n      <h1>należy umieścić w pojemniku:</h1>\n      <h1> {{waste.wasteType.name}}</h1>\n      <br>\n      <button type=\"submit\" routerLink=\"/\" class=\"btn btn-success\"><i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i> Wróć do wyszukiwania</button>\n</div>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport {DataService} from '../service/data/data.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {wasteType} from './create-waste/create-waste.component';\n\nexport class Waste {\n  constructor(public id: number,\n              public name: string,\n              public wasteType: WasteType) {\n  }\n}\nexport class WasteType {\n  constructor(public id: number,\n              public name: string) {\n  }\n}\n@Component({\n  selector: 'app-waste',\n  templateUrl: './waste.component.html',\n  styleUrls: ['./waste.component.css']\n})\nexport class WasteComponent implements OnInit {\n\n  id: number;\n  waste: Waste = {\n    id: this.id,\n    name,\n    wasteType\n  }\n  wasteTypes: WasteType[];\n  error = false;\n\n  constructor(private router: Router, private wasteService: DataService, private activatedRoute: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    // getting specific id of chosen in admin page Waste\n    this.id = this.activatedRoute.snapshot.params.id;\n    console.log('Waste id: ' + this.id);\n    // retriving data from database of a waste of specific id\n\n    if (this.id != null) {\n      this.getWasteById();\n    }\n    this.getAllWasteTypes();\n\n    console.log('wasteTypes in wasteComponent: ' + this.wasteTypes);\n  }\n      getWasteById() {\n        this.wasteService.retrieveWasteById(this.id)\n          .subscribe (response => {\n            console.log(response);\n            this.waste = response;\n          });\n      }\n      getAllWasteTypes() {\n        this.wasteService.retrieveAllWasteTypes()\n        .subscribe(data => {\n        console.log('method getAllWastesTypes called');\n        console.log(data);\n        this.wasteTypes = data;\n      });\n  }\n\n      updateWaste() {\n          this.wasteService.updateWaste(this.waste.id, this.waste)\n            .subscribe(data =>\n              console.log('Created waste with data: ' + data));\n          this.router.navigate(['admin']);\n  }\n}\n","\n<div class=\"main-container\">\n  <form (ngSubmit)=\"updateWaste()\">\n    <div class=\"alert-login-container\">\n      <div class=\"alert alert-warning\" role=\"alert\" *ngIf=\"name.invalid && (name.dirty || name.touched)\" style=\"color: red\">Nazwa musi mieć conajmniej 3 litery</div>\n    </div>\n\n    <div class=\"form-group\">\n      <label><h2>Nazwa odpadu</h2></label>\n        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"waste.name\" name=\"wasteName\" id=\"name\" required minlength=\"3\" #name=\"ngModel\">\n    </div>\n\n    <div class=\"form-group\">\n      <br>\n      <label><h2>Wybierz typ odpadu</h2></label>\n      <br>\n  <mat-form-field>\n    <mat-select [placeholder]=\"waste.wasteType.name\" [(value)]=\"waste.wasteType\" name=\"type\">\n      <mat-option *ngFor=\"let wasteType of wasteTypes\" [value]=\"wasteType\">\n        {{wasteType.name}}\n      </mat-option>\n    </mat-select>\n  </mat-form-field>\n      <br><br>\n</div>\n    <button type=\"submit\" class=\"btn btn-primary\">Update waste</button>\n  </form>\n</div>\n\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}